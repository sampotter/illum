* Long term ideas
** Numerical study of conditioning
   - It would be good to build some intuition as to what the
     conditioning of the form factor matrix depends on
   - Here's one way we could explore this:
	 1. Start with a discretized sphere (F = identity matrix,
        perfectly conditioned)
	 2. Take two approaches to simulating planetary bodies:
		- Add low frequency spherical harmonic perturbations (turn it
          into a bean)
		- Did out craters
		- Combine these approaches
	 3. Do these two things while increasing the size of the mesh, see
        what happens
** Taking advantage of BEM techniques
   - Unlike traditional radiosity, where the matrices are largely
     dense, our matrices are very sparse
   - For some models (e.g. 67P) the form factor matrix will be denser
   - Can we use an algorithm for finding cliques in graphs to reorder
     the triangle mesh and take advantage of e.g. wavelet methods?
* General
** DONE Read Boost MPI tutorial
   :LOGBOOK:
   CLOCK: [2018-06-27 Wed 11:01]--[2018-06-27 Wed 11:23] =>  0:22
   :END:
** DONE Learn how to use HDF5 C++ bindings
   - Note: parallel HDF5 and HDF5 C++ can't be enabled at the same
     time
   :LOGBOOK:
   CLOCK: [2018-06-27 Wed 11:24]--[2018-06-27 Wed 11:55] =>  0:31
   :END:
** DONE Learn how to use parallel HDF5 (read [[https://support.hdfgroup.org/HDF5/Tutor/parallel.html][tutorial]])
** DONE Fix fastbvh
   :LOGBOOK:
   CLOCK: [2018-06-13 Wed 12:25]--[2018-06-13 Wed 12:35] =>  0:10
   CLOCK: [2018-06-13 Wed 11:59]--[2018-06-13 Wed 12:02] =>  0:03
   :END:
* Visibility
** DONE Add height offset to visibility and horizion matrix creation
** DONE Prune visibility matrix by shooting rays
** DONE Fix C++ visibility matrix

   - [X] fix BVH permutation
   - [X] get back to only dealing w/ sparse matrices
   - [X] write A's in COO format in ASCII file...
   - [X] write pre-A and corrected A to disk in CSC format (in HDF5 files)
   - [X] load into Python using sparse.py and plot (6 plots total)
   - [X] fix visibility to shoot rays to each triangle corner

** DONE Export pruned vis. matrix to HDF5 and load in Python
** DONE Plot vis. matrix on 3D mesh
** DONE Plot pruned visible triangles in spherical coordinates
** TODO Triangle picking to make it easier to debug visibility
* Horizons
** DONE Create horizons using raytracing and std::lower_bound
   :LOGBOOK:
   CLOCK: [2018-06-13 Wed 12:49]--[2018-06-13 Wed 13:09] =>  0:20
   CLOCK: [2018-06-13 Wed 11:50]--[2018-06-13 Wed 11:55] =>  0:05
   CLOCK: [2018-06-13 Wed 11:28]--[2018-06-13 Wed 11:44] =>  0:16
   CLOCK: [2018-06-13 Wed 10:58]--[2018-06-13 Wed 11:23] =>  0:25
   CLOCK: [2018-06-13 Wed 10:20]--[2018-06-13 Wed 10:49] =>  0:29
   :END:
** DONE Write horizons out and plot in Python
** TODO Compressing the horizon map
* Illumination Modeling
** TODO [#A] Fix direct illumination in Arma
** TODO Read Ingersoll paper
** TODO Recreate Ingersoll results
** DONE Derive recurrence for illumination
* Implementation
** DONE Replace "objects.size()" use with a "num_faces" variable
** DONE Get Armadillo HDF5 working again
   :LOGBOOK:
   CLOCK: [2018-06-25 Mon 09:45]--[2018-06-25 Mon 10:04] =>  0:19
   :END:
** DONE Optimize "make_A" (build from rowind/colptr vectors)
   :LOGBOOK:
   CLOCK: [2018-06-22 Fri 12:43]--[2018-06-22 Fri 14:21] =>  1:38
   CLOCK: [2018-06-22 Fri 11:27]--[2018-06-22 Fri 12:34] =>  1:07
   :END:
** TODO Get fastbvh to use fixed armadillo vectors
   :LOGBOOK:
   CLOCK: [2018-06-22 Fri 11:11]--[2018-06-22 Fri 11:27] =>  0:16
   :END:
** TODO Use fixed armadillo vectors wherever possible
** TODO Enable OpenMP
** TODO GPU matrix multiplication
** TODO Store triangles contiguously in memory (i.e. templatize fastbvh)
** TODO [#A] Parallelize visibility
   - [ ] Fix bug in make_A related to Intel TBB usage
   :LOGBOOK:
   CLOCK: [2018-06-22 Fri 15:11]--[2018-06-22 Fri 16:39] =>  1:28
   :END:
** TODO Implement scattering recurrence
** DONE Get software/reference for thermal model
** DONE [#A] MPI horizons
   :LOGBOOK:
   CLOCK: [2018-06-29 Fri 10:18]--[2018-06-29 Fri 11:46] =>  1:28
   :END:
** DONE [#A] MPI ratios
** TODO Read sun points with weights

